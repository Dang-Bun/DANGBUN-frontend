import React, { useEffect, useMemo, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useMemberApi } from '../../hooks/useMemberApi';

type Mode = 'member' | 'manager';

const Home: React.FC = () => {
  const navigate = useNavigate();

  // MyPlaceÏóêÏÑú ÎÑòÏñ¥Ïò® Í∞í(ÏóÜÏùÑ ÏàòÎèÑ ÏûàÏùå)
  const { state } = useLocation() as {
    state?: { placeId?: number; placeName?: string; placeIcon?: string; role?: string };
  };

  // ‚ñë‚ñë‚ñë 1) ÏßÑÏûÖ/state Î°úÍ∑∏
  useEffect(() => {
    console.log('‚û°Ô∏è [Home] ÏßÑÏûÖ');
    console.log('   üì® Î∞õÏùÄ state:', state);
  }, [state]);

  // ‚ñë‚ñë‚ñë 2) Ïª®ÌÖçÏä§Ìä∏ ÎèôÍ∏∞Ìôî(localStorage) + Î°úÍ∑∏
  useEffect(() => {
    console.log('üß© [Home] Ïª®ÌÖçÏä§Ìä∏ ÎèôÍ∏∞Ìôî ÏãúÏûë');
    if (state?.placeId)   { localStorage.setItem('placeId', String(state.placeId));   console.log('   üíæ placeId Ï†ÄÏû•:', state.placeId); }
    if (state?.placeName) { localStorage.setItem('placeName', state.placeName);       console.log('   üíæ placeName Ï†ÄÏû•:', state.placeName); }
    if (state?.placeIcon) { localStorage.setItem('placeIcon', state.placeIcon);       console.log('   üíæ placeIcon Ï†ÄÏû•:', state.placeIcon); }
    if (state?.role) {
      const norm =
        state.role === 'Îß§ÎãàÏ†Ä' ? 'manager' :
        state.role === 'Î©§Î≤Ñ'   ? 'member'  :
        String(state.role).toLowerCase();
      localStorage.setItem('role', norm);
      console.log('   üíæ role Ï†ÄÏû•:', norm);
    }
    console.log('üß© [Home] Ïª®ÌÖçÏä§Ìä∏ ÎèôÍ∏∞Ìôî ÏôÑÎ£å');
  }, [state]);

  // ÎèôÍ∏∞ÌôîÎêú ÏµúÏ¢Ö Í∞í(ÏóÜÏúºÎ©¥ localStorage fallback)
  const placeId    = useMemo(() => Number(state?.placeId ?? localStorage.getItem('placeId') ?? 0), [state?.placeId]);
  const placeName  = useMemo(() => state?.placeName ?? localStorage.getItem('placeName') ?? 'ÌîåÎ†àÏù¥Ïä§', [state?.placeName]);
  const placeIcon  = useMemo(() => state?.placeIcon ?? localStorage.getItem('placeIcon') ?? 'ETC', [state?.placeIcon]);

  // Ïó≠Ìï† Í≤∞Ï†ï
  const [role, setRole] = useState<Mode | null>(null);
  const [loading, setLoading] = useState(true);

  // ‚ñë‚ñë‚ñë 3) Ïó≠Ìï† Í≤∞Ï†ï Î°úÏßÅ + Î°úÍ∑∏ (state.role Ïö∞ÏÑ† ‚Üí ÏóÜÏúºÎ©¥ API ‚Üí ÏóÜÏúºÎ©¥ member)
  useEffect(() => {
    let mounted = true;

    (async () => {
      try {
        setLoading(true);
        console.log('üîé [Home] Ïó≠Ìï† Í≤∞Ï†ï ÏãúÏûë');

        // 3-1. MyPlaceÍ∞Ä roleÏùÑ ÎÑòÍ∏¥ Í≤ΩÏö∞ Í∑∏ Í∞íÏùÑ Ïö∞ÏÑ† ÏÇ¨Ïö©
        if (state?.role) {
          const norm =
            state.role === 'Îß§ÎãàÏ†Ä' ? 'manager' :
            state.role === 'Î©§Î≤Ñ'   ? 'member'  :
            String(state.role).toLowerCase();
          const resolved: Mode = norm === 'manager' ? 'manager' : 'member';
          console.log('   üü¢ state.role ÏÇ¨Ïö©:', resolved);
          if (mounted) setRole(resolved);
          return;
        }

        // 3-2. roleÏù¥ ÏóÜÍ≥† placeIdÎèÑ ÏóÜÏúºÎ©¥ Í∏∞Î≥∏ member
        if (!placeId) {
          console.log('   ‚ö†Ô∏è placeId ÏóÜÏùå ‚Üí Í∏∞Î≥∏ role=member');
          if (mounted) setRole('member');
          return;
        }

        // 3-3. API Ï°∞ÌöåÎ°ú Î≥¥Í∞ï
        console.log(`üì° [API] GET /places/${placeId}/members/me Ìò∏Ï∂ú`);
        const res = await useMemberApi.me(placeId);
        console.log('üì• [API] /me ÏùëÎãµ:', res?.data);

        const raw = String(res?.data?.role ?? localStorage.getItem('role') ?? 'member').toLowerCase();
        const resolved: Mode = raw === 'manager' ? 'manager' : 'member';
        console.log('   ‚úÖ Ïó≠Ìï† ÌåêÏ†ï:', resolved);
        if (mounted) setRole(resolved);
      } catch (e) {
        console.error('‚ùå [Home] Ïó≠Ìï† Ï°∞Ìöå Ïã§Ìå®:', e);
        if (mounted) setRole('member');
      } finally {
        if (mounted) {
          setLoading(false);
          console.log('üèÅ [Home] Î°úÎî© Ï¢ÖÎ£å');
        }
      }
    })();

    return () => { mounted = false; console.log('üõë [Home] Ïñ∏ÎßàÏö¥Ìä∏'); };
  }, [state?.role, placeId]);

  // ‚ñë‚ñë‚ñë 4) ÏµúÏ¢Ö Î¶¨Îã§Ïù¥Î†âÌä∏ (ÌïÑÏöîÌïú Í∞í Ìï®Íªò ÎÑòÍπÄ)
  useEffect(() => {
    if (!loading && role) {
      const target = role === 'manager' ? '/home/manager' : '/home/member';
      console.log('‚û°Ô∏è [Home] redirect ‚Üí', target, { placeId, placeName, placeIcon, role });
      navigate(target, {
        replace: true,
        state: { placeId, placeName, placeIcon, role },
      });
    }
  }, [loading, role, placeId, placeName, placeIcon, navigate]);


  return <div className="p-6">Î°úÎî©Ï§ë‚Ä¶</div>;
};

export default Home;
